%!PS-Adobe-2.0 EPSF-2.0
%%Title: 0to100k.eps
%%Creator: gnuplot 4.6 patchlevel 6
%%CreationDate: Fri Sep 29 14:45:53 2017
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (0to100k.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 6)
  /Author (vishal)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Sep 29 14:45:53 2017)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(NimbusSanL-Regu) findfont 200 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
980 1173 M
63 0 V
5796 0 R
-63 0 V
stroke
860 1173 M
[ [(NimbusSanL-Regu) 200.0 0.0 true true 0 ( 50)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
980 1718 M
63 0 V
5796 0 R
-63 0 V
stroke
860 1718 M
[ [(NimbusSanL-Regu) 200.0 0.0 true true 0 ( 100)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
980 2262 M
63 0 V
5796 0 R
-63 0 V
stroke
860 2262 M
[ [(NimbusSanL-Regu) 200.0 0.0 true true 0 ( 150)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
980 2806 M
63 0 V
5796 0 R
-63 0 V
stroke
860 2806 M
[ [(NimbusSanL-Regu) 200.0 0.0 true true 0 ( 200)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
980 3350 M
63 0 V
5796 0 R
-63 0 V
stroke
860 3350 M
[ [(NimbusSanL-Regu) 200.0 0.0 true true 0 ( 250)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
980 3895 M
63 0 V
5796 0 R
-63 0 V
stroke
860 3895 M
[ [(NimbusSanL-Regu) 200.0 0.0 true true 0 ( 300)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
980 4439 M
63 0 V
5796 0 R
-63 0 V
stroke
860 4439 M
[ [(NimbusSanL-Regu) 200.0 0.0 true true 0 ( 350)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
980 640 M
0 63 V
0 3736 R
0 -63 V
stroke
980 440 M
[ [(NimbusSanL-Regu) 200.0 0.0 true true 0 ( 0)]
] -66.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
2152 640 M
0 63 V
0 3736 R
0 -63 V
stroke
2152 440 M
[ [(NimbusSanL-Regu) 200.0 0.0 true true 0 ( 10000)]
] -66.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
3324 640 M
0 63 V
0 3736 R
0 -63 V
stroke
3324 440 M
[ [(NimbusSanL-Regu) 200.0 0.0 true true 0 ( 20000)]
] -66.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
4495 640 M
0 63 V
0 3736 R
0 -63 V
stroke
4495 440 M
[ [(NimbusSanL-Regu) 200.0 0.0 true true 0 ( 30000)]
] -66.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
5667 640 M
0 63 V
0 3736 R
0 -63 V
stroke
5667 440 M
[ [(NimbusSanL-Regu) 200.0 0.0 true true 0 ( 40000)]
] -66.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
6839 640 M
0 63 V
0 3736 R
0 -63 V
stroke
6839 440 M
[ [(NimbusSanL-Regu) 200.0 0.0 true true 0 ( 50000)]
] -66.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
980 4439 N
980 640 L
5859 0 V
0 3799 V
-5859 0 V
Z stroke
LCb setrgbcolor
160 2539 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(NimbusSanL-Regu) 220.0 0.0 true true 0 (Arrival of n-th failure)]
] -73.3 MCshow
grestore
LTb
LCb setrgbcolor
3909 140 M
[ [(NimbusSanL-Regu) 220.0 0.0 true true 0 (Time)]
] -73.3 MCshow
LTb
3909 4739 M
[ [(NimbusSanL-Regu) 200.0 0.0 true true 0 (Time Vs Arrival of Next Failure)]
] -66.7 MCshow
1.500 UP
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
0.500 UP
2.000 UL
LT1
0.00 0.00 1.00 C 1154 640 Crs
1154 651 Crs
1166 662 Crs
1167 673 Crs
1169 684 Crs
1183 694 Crs
1184 705 Crs
1186 716 Crs
1186 727 Crs
1200 738 Crs
1205 749 Crs
1210 760 Crs
1257 771 Crs
1264 782 Crs
1286 792 Crs
1286 803 Crs
1289 814 Crs
1289 825 Crs
1309 836 Crs
1311 847 Crs
1314 858 Crs
1333 869 Crs
1333 879 Crs
1338 890 Crs
1343 901 Crs
1371 912 Crs
1390 923 Crs
1418 934 Crs
1425 945 Crs
1431 956 Crs
1453 967 Crs
1458 977 Crs
1464 988 Crs
1470 999 Crs
1491 1010 Crs
1511 1021 Crs
1553 1032 Crs
1581 1043 Crs
1593 1054 Crs
1637 1065 Crs
1691 1075 Crs
1692 1086 Crs
1738 1097 Crs
1758 1108 Crs
1765 1119 Crs
1793 1130 Crs
1795 1141 Crs
1804 1152 Crs
1815 1162 Crs
1824 1173 Crs
1883 1184 Crs
1894 1195 Crs
1894 1206 Crs
1908 1217 Crs
1922 1228 Crs
1946 1239 Crs
1950 1250 Crs
1954 1260 Crs
1965 1271 Crs
1980 1282 Crs
1986 1293 Crs
1998 1304 Crs
2002 1315 Crs
2012 1326 Crs
2043 1337 Crs
2057 1348 Crs
2060 1358 Crs
2062 1369 Crs
2072 1380 Crs
2118 1391 Crs
2130 1402 Crs
2132 1413 Crs
2164 1424 Crs
2164 1435 Crs
2263 1446 Crs
2296 1456 Crs
2338 1467 Crs
2384 1478 Crs
2412 1489 Crs
2415 1500 Crs
2464 1511 Crs
2475 1522 Crs
2489 1533 Crs
2491 1543 Crs
2494 1554 Crs
2500 1565 Crs
2507 1576 Crs
2535 1587 Crs
2547 1598 Crs
2564 1609 Crs
2586 1620 Crs
2589 1631 Crs
2590 1641 Crs
2605 1652 Crs
2613 1663 Crs
2630 1674 Crs
2639 1685 Crs
2642 1696 Crs
2643 1707 Crs
2663 1718 Crs
2674 1729 Crs
2726 1739 Crs
2742 1750 Crs
2762 1761 Crs
2772 1772 Crs
2786 1783 Crs
2795 1794 Crs
2835 1805 Crs
2849 1816 Crs
2850 1827 Crs
2893 1837 Crs
2932 1848 Crs
2939 1859 Crs
2969 1870 Crs
2990 1881 Crs
2991 1892 Crs
2997 1903 Crs
3022 1914 Crs
3033 1924 Crs
3037 1935 Crs
3045 1946 Crs
3048 1957 Crs
3072 1968 Crs
3078 1979 Crs
3092 1990 Crs
3094 2001 Crs
3121 2012 Crs
3129 2022 Crs
3164 2033 Crs
3177 2044 Crs
3190 2055 Crs
3240 2066 Crs
3245 2077 Crs
3246 2088 Crs
3247 2099 Crs
3254 2110 Crs
3262 2120 Crs
3269 2131 Crs
3273 2142 Crs
3284 2153 Crs
3287 2164 Crs
3387 2175 Crs
3415 2186 Crs
3462 2197 Crs
3468 2207 Crs
3477 2218 Crs
3484 2229 Crs
3523 2240 Crs
3549 2251 Crs
3568 2262 Crs
3574 2273 Crs
3592 2284 Crs
3602 2295 Crs
3623 2305 Crs
3644 2316 Crs
3644 2327 Crs
3655 2338 Crs
3686 2349 Crs
3697 2360 Crs
3744 2371 Crs
3747 2382 Crs
3761 2393 Crs
3767 2403 Crs
3777 2414 Crs
3817 2425 Crs
3820 2436 Crs
3876 2447 Crs
3889 2458 Crs
3900 2469 Crs
4027 2480 Crs
4064 2491 Crs
4100 2501 Crs
4115 2512 Crs
4128 2523 Crs
4136 2534 Crs
4145 2545 Crs
4149 2556 Crs
4191 2567 Crs
4194 2578 Crs
4204 2588 Crs
4210 2599 Crs
4233 2610 Crs
4252 2621 Crs
4257 2632 Crs
4260 2643 Crs
4269 2654 Crs
4275 2665 Crs
4284 2676 Crs
4286 2686 Crs
4314 2697 Crs
4334 2708 Crs
4337 2719 Crs
4351 2730 Crs
4362 2741 Crs
4385 2752 Crs
4421 2763 Crs
4500 2774 Crs
4532 2784 Crs
4532 2795 Crs
4534 2806 Crs
4564 2817 Crs
4580 2828 Crs
4595 2839 Crs
4634 2850 Crs
4669 2861 Crs
4685 2872 Crs
4687 2882 Crs
4762 2893 Crs
4774 2904 Crs
4795 2915 Crs
4841 2926 Crs
4846 2937 Crs
4874 2948 Crs
4881 2959 Crs
4887 2969 Crs
4934 2980 Crs
4942 2991 Crs
5021 3002 Crs
5029 3013 Crs
5073 3024 Crs
5076 3035 Crs
5099 3046 Crs
5117 3057 Crs
5128 3067 Crs
5129 3078 Crs
5161 3089 Crs
5166 3100 Crs
5166 3111 Crs
5216 3122 Crs
5236 3133 Crs
5251 3144 Crs
5255 3155 Crs
5273 3165 Crs
5277 3176 Crs
5280 3187 Crs
5285 3198 Crs
5312 3209 Crs
5338 3220 Crs
5385 3231 Crs
5404 3242 Crs
5408 3252 Crs
5415 3263 Crs
5418 3274 Crs
5433 3285 Crs
5458 3296 Crs
5465 3307 Crs
5474 3318 Crs
5492 3329 Crs
5525 3340 Crs
5560 3350 Crs
5564 3361 Crs
5565 3372 Crs
5574 3383 Crs
5577 3394 Crs
5591 3405 Crs
5611 3416 Crs
5661 3427 Crs
5672 3438 Crs
5683 3448 Crs
5683 3459 Crs
5683 3470 Crs
5766 3481 Crs
5803 3492 Crs
5862 3503 Crs
5869 3514 Crs
5881 3525 Crs
5911 3536 Crs
6001 3546 Crs
6002 3557 Crs
6003 3568 Crs
6072 3579 Crs
6089 3590 Crs
6095 3601 Crs
6156 3612 Crs
6174 3623 Crs
6197 3633 Crs
6201 3644 Crs
6213 3655 Crs
6312 3666 Crs
6314 3677 Crs
6341 3688 Crs
6377 3699 Crs
6429 3710 Crs
6469 3721 Crs
6487 3731 Crs
6513 3742 Crs
6519 3753 Crs
6535 3764 Crs
6545 3775 Crs
6558 3786 Crs
6618 3797 Crs
6621 3808 Crs
6631 3819 Crs
6642 3829 Crs
6667 3840 Crs
6669 3851 Crs
6686 3862 Crs
6687 3873 Crs
6710 3884 Crs
6711 3895 Crs
6715 3906 Crs
6717 3917 Crs
6731 3927 Crs
6764 3938 Crs
6825 3949 Crs
6833 3960 Crs
% End plot #1
1.000 UL
LTb
LCb setrgbcolor
980 4439 N
980 640 L
5859 0 V
0 3799 V
-5859 0 V
Z stroke
1.500 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: NimbusSanL-Regu
